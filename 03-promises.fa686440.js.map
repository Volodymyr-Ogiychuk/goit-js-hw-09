{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEnCC,EAAW,CAEbC,MAAOJ,EAAQK,SAASD,MAAME,MAC9BC,KAAMP,EAAQK,SAASE,KAAKD,MAC5BE,OAAQR,EAAQK,SAASG,OAAOF,OAGlCN,EAAQS,iBAAiB,SAAS,SAAAC,GAEhC,IAAwBC,EAAAD,EAAME,OAAtBC,EAAgBF,EAAhBE,KAAMP,EAAUK,EAAVL,MAEdH,EAASU,GAAQP,KAwBnB,SAASQ,EAAcC,EAAUX,GAC/B,OAAO,IAAIY,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUX,UAEpBc,EAAO,CAAEH,WAAUX,YAEpBA,MAKLJ,EAAQS,iBAAiB,UAlCN,SAAAC,GACnBA,EAAMY,iBAKN,IAJA,IAAIC,EAAaC,OAAOrB,EAASC,OAC7BqB,EAAYD,OAAOrB,EAASI,MAC5BmB,EAAcF,OAAOrB,EAASK,QAEzBmB,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAErCb,EAAca,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUX,EAAKyB,EAALzB,MACrBN,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAAN5B,EAAM,UAE9D6B,OAAM,SAAAJ,G,IAAGd,EAAQc,EAARd,SAAUX,EAAKyB,EAALzB,MAClBN,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAfjB,EAAS,QAAYiB,OAAN5B,EAAM,UAE1DmB,GAAcE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nlet userData = {\n  \n  delay: formRef.elements.delay.value,\n  step: formRef.elements.step.value,\n  amount: formRef.elements.amount.value\n};\n\nformRef.addEventListener('input', event => {\n\n  const { name, value } = event.target;\n    \n  userData[name] = value;\n  \n});\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  let delayValue = Number(userData.delay);\n  let stepValue = Number(userData.step);\n  let amountValue = Number(userData.amount);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delayValue += stepValue\n \n  };\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    });\n    \n  }\n  \n  formRef.addEventListener('submit', handleSubmit)\n  \n\n\n\n  \n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$userData","delay","elements","value","step","amount","addEventListener","event","_target","target","name","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","preventDefault","delayValue","Number","stepValue","amountValue","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.fa686440.js.map"}